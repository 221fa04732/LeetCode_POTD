class Solution {
public:
    int maxPointsInsideSquare(vector<vector<int>>& points, string s) 
    {
        for(int i=0;i<points.size();i++)
        {
            if(points[i][0]<0)
            {
                points[i][0]=points[i][0]*(-1);
            }
            if(points[i][1]<0)
            {
                points[i][1]=points[i][1]*(-1);
            }
        }
        int arr1[26]={0};
        int arr2[26]={0};
        for(int i=0;i<points.size();i++)
        {
            if(arr1[s[i]-'a']==0)
            {
                arr1[s[i]-'a']=max(points[i][0],points[i][1]);
            }
            else if(arr1[s[i]-'a']!=0 && arr2[s[i]-'a']==0)
            {
                int x=arr1[s[i]-'a'];
                int y=max(points[i][0],points[i][1]);
                if(y>x)
                {
                    arr2[s[i]-'a']=y;
                }
                else 
                {
                    arr2[s[i]-'a']=x;
                    arr1[s[i]-'a']=y;
                }
            }
            else 
            {
                int x=arr1[s[i]-'a'];
                int y=arr2[s[i]-'a'];
                int z=max(points[i][0],points[i][1]);
                if(x>y)
                {
                    swap(x,y);
                }
                if(x>z)
                {
                    swap(x,z);
                }
                if(y>z)
                {
                    swap(y,z);
                }
                arr2[s[i]-'a']=y;
                arr1[s[i]-'a']=x;
            }
        }
        int ans=INT_MAX,c=0;
        for(int i=0;i<26;i++)
        {
            if(arr2[i]!=0)
            {
                ans=min(ans,arr2[i]);
                c++;
            }
        }
        if(c==0)
        {
            return s.size();
        }
        int answer=0;
        for(int i=0;i<points.size();i++)
        {
            if(points[i][0]<ans && points[i][1]<ans)
            {
                answer++;
            }
        }
        return answer;
    }
};
