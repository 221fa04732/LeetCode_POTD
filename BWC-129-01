class Solution {
public:
    bool canMakeSquare(vector<vector<char>>& grid) 
    {
        int w1=0,w2=0,w3=0,w4=0;
        int b1=0,b2=0,b3=0,b4=0;
        if(grid[0][0]=='W')
        {
            w1++;
        }
        else 
        {
            b1++;
        }
        if(grid[0][1]=='W')
        {
            w1++;
            w2++;
        }
        else 
        {
            b1++;
            b2++;
        }
        if(grid[0][2]=='W')
        {
            w2++;
        }
        else 
        {
            b2++;
        }
        if(grid[1][0]=='W')
        {
            w1++;
            w3++;
        }
        else 
        {
            b1++;
            b3++;
        }
        if(grid[1][1]=='W')
        {
            w1++;
            w2++;
            w3++;
            w4++;
        }
        else 
        {
            b1++;
            b2++;
            b3++;
            b4++;
        }
        if(grid[1][2]=='W')
        {
            w2++;
            w4++;
        }
        else 
        {
            b2++;
            b4++;
        }
        if(grid[2][0]=='W')
        {
            w3++;
        }
        else 
        {
            b3++;
        }
        if(grid[2][1]=='W')
        {
            w3++;
            w4++;
        }
        else 
        {
            b3++;
            b4++;
        }
        if(grid[2][2]=='W')
        {
            w4++;
        }
        else 
        {
            b4++;
        }
        if(w1>2 ||w2>2 || w3>2 || w4>2 || b1>2 ||b2>2 || b3>2 || b4>2)
        {
            return 1;
        }
        return 0;
    }
};
